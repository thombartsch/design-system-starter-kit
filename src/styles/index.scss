//
// Prototype styles (using the Sass CSS preprocessor)
//

//
// First, we're importing the design system from the npm package
//
$static-font-path: '/assets/fonts/webfonts';

$color-background-context-bar-brand-accent: rgb(132, 189, 0);

@import 'node_modules/@salesforce-ux/design-system/scss/index';

//
// Then, we're importing some styles via Sass partials (filenames starting with a "_")
//
@import 'footer';
@import 'layout';


html {
  background-color: #afc5de;
}


.slds-brand-band:before {
  background-image: url('/assets/banner-brand-default.png'),linear-gradient(to top,rgba(32, 92, 159, 0), #205c9f);
  background-repeat: repeat-x;
  background-position: top left;
}

.slds-brand-band:after {
  background-image: none;
}
//
// We can also add styles directly in this file, like so:
//

// Push down the global navigation below the header using a placeholder element
.app-header-placeholder {
  // A note on Design Tokens in Sass:
  //
  // $height-header is a Sass variable pointing to a Design Token
  // Design tokens are listed at:
  // https://www.lightningdesignsystem.com/design-tokens/
  //
  // This is how you leverage Design Tokens in Sass:
  height: $height-header;
}

// Wrap the prototype in a scrollable container
// .app-wrapper, .page-content {
//   overflow: auto;
//   position: absolute;
//   -webkit-overflow-scrolling: touch;
//   top: $height-context-bar + $height-header;
//   bottom: 0;
//   right: 0;
//   left: 0;
// }

// .page-content {
//   top: 105px;
// }

.content-frame-container {
  overflow: hidden;
  flex: 1;
  position: relative;
}

.content-frame {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  margin: 0;
}

.app-wrapper,
.slds-brand-band {
  min-height: calc(100vh - #{$height-context-bar + $height-header});
  position: relative;
}

.layout-table-fix {
  &::after {
    position: absolute;
    content: '';
    display: block;
    height: calc(100% - (5 * #{$spacing-small}));
    top: calc(5 * #{$spacing-small});
    left: #{$spacing-small};
    width: calc(100% - (2 * #{$spacing-small}));
    background-color: $split-view-color-background;
    z-index: -1;
  }
}

.is-disabled {
  opacity: .4;
}

.rotate-45 {
  transform: rotate(45deg);
}

.slds-icon {
  transition: all .2s ease;
}

#gain-value {
    &::before {
    content: "25%";
  }

> span {
  margin-left: .1em;
  display: inline-block;
  height: 1rem;
  width: 25%;
  background-color: #04844b;
  transition: all .2s ease;
  }
}

#gain-value.new > span {
  width: 12%;
}

#gain-value.new {
    &::before {
    content: "12%";
  }
}

.value-mods {
  > li {
      // display: inline;
  }
}

.slds-panel_filters {
  min-width: 300px;
  max-width: 300px;
  width: 300px;
  // margin-left: 0;
}

.is-active,
.is-active:focus,
.is-active:hover {
    background-color: rgb(0, 95, 178);
    color: rgb(255, 255, 255);
}

tr.is-new {
  font-weight: bold;
}

#assign-to {
  z-index: 9999;
}

 .slds-button-tool {
  width: auto;
  padding: 0 .4rem;
 }


.popover-footer-trigger {
  text-align: right;
}

.slds-tree__item {
  position: relative;
}

.slds-button_assign {
  // display: none;
    padding: 0 .5rem;
    font-size: 0.65rem;
        position: absolute;
    right: 1rem;

  .slds-tree__item:hover & {
    display: inline-block;
  }
}


.sidebar {
  flex: 1 1;
  min-width: 15rem;
  max-width: 15rem;
  border-right: 1px solid #d8dde6;
}

#select-product .slds-modal__container {
  transform: translate3d(0,0,0);
  transition: all 0.2s;
}

.product-list {
  > .slds-media:nth-child(even) {
    // background-color: #f4f6f9;
  }
}


.slds-modal--medium .slds-modal__container {
    width: 70%;
    max-width: 960px;
    min-width: 480px
}

.editor-label {
  padding-top: $spacing-x-small;
}

.slds-tabs_default__link .slds-badge {
  margin-left: .5em;
  vertical-align: middle;
  display: inline-block;
}



// .slds-visual-picker_medium .slds-visual-picker__figure,
// .slds-visual-picker_medium .slds-visual-picker__body {
//   width: 100%;
//   height: auto;
//   padding: .5rem;
// }

.slds-tabs_default__content {
  min-height: 50vh;
}

.product-tile {
  &[aria-level="2"] {
    // background-color: red;
    padding-left: 2rem;
  }

  &[aria-level="3"] {
    // background-color: red;
    padding-left: 4.5rem;
  }

  &:hover {
  background-color: #fafaf9;
  }
}


.trigger-nested.is-opened {
  transform: rotate(90deg);
}

.page-content.fix-layout {
  margin-right: -$spacing-x-small;
  margin-left: -$spacing-x-small;
}

.no-padding {
  padding-left: 0!important;
}

.slds-section__content {
  overflow: hidden;
}


// Checkbox Inheretance

.slds-checkbox_add-button input[type="checkbox"]:not(:checked).is-inhereted ~ .slds-checkbox_faux,
.slds-checkbox_add-button input[type="checkbox"]:not(:checked).is-inhereted ~ .slds-checkbox--faux,
.slds-checkbox_add-button input[type="checkbox"]:not(:checked).is-inhereted + .slds-checkbox_faux,
.slds-checkbox_add-button input[type="checkbox"]:not(:checked).is-inhereted + .slds-checkbox--faux,
.slds-checkbox--add-button input[type="checkbox"]:not(:checked).is-inhereted ~ .slds-checkbox_faux,
.slds-checkbox--add-button input[type="checkbox"]:not(:checked).is-inhereted ~ .slds-checkbox--faux,
.slds-checkbox--add-button input[type="checkbox"]:not(:checked).is-inhereted + .slds-checkbox_faux,
.slds-checkbox--add-button input[type="checkbox"]:not(:checked).is-inhereted + .slds-checkbox--faux {
  background-color: $color-background-path-incomplete-hover;

  &:before,
  &:after {
    background-color: #fff;
  }

  &:before {
    top: -0.125rem;
    left: 0.4375rem;
    width: 0.1875rem;
    height: 1.0625rem;
    transform: rotate(40deg);
  }

  &:after {
    top: 0.3125rem;
    left: -0.625rem;
    width: 0.625rem;
    height: 0.1875rem;
    transform: rotate(36deg);
  }
}
